format_version: "8"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
    - STEP_ID_IN_STEPLIB: git-clone
    - GIT_REPOSITORY_URL: https://github.com/bitrise-io/steps-git-clone.git
    - opts:
        is_expand: false
      EVAL_SCRIPT: |-
        echo "GIT_CLONE_COMMIT_HASH: ${GIT_CLONE_COMMIT_HASH}"
        echo "GIT_CLONE_COMMIT_MESSAGE_SUBJECT: ${GIT_CLONE_COMMIT_MESSAGE_SUBJECT}"
        echo "GIT_CLONE_COMMIT_MESSAGE_BODY: ${GIT_CLONE_COMMIT_MESSAGE_BODY}"
        echo "GIT_CLONE_COMMIT_COUNT: ${GIT_CLONE_COMMIT_COUNT}"
        echo "GIT_CLONE_COMMIT_AUTHOR_NAME: ${GIT_CLONE_COMMIT_AUTHOR_NAME}"
        echo "GIT_CLONE_COMMIT_AUTHOR_EMAIL: ${GIT_CLONE_COMMIT_AUTHOR_EMAIL}"
        echo "GIT_CLONE_COMMIT_COMMITER_NAME: ${GIT_CLONE_COMMIT_COMMITER_NAME}"
        echo "GIT_CLONE_COMMIT_COMMITER_EMAIL: ${GIT_CLONE_COMMIT_COMMITER_EMAIL}"

workflows:
  test:
    envs:
    - CLONE_INTO_DIR: .
    - GIT_REPOSITORY_URL: https://github.com/bitrise-io/git-clone-test.git
    after_run:
    - _test_too_long_commit_message
    steps:
    - activate-ssh-key:
        run_if: true
        inputs:
        - clone_into_dir: repo-dir
        - commit: ""
        - tag: ""
        - branch: "master"
        - pull_request_id: ""
        - clone_depth: ""
        - ssl_verify: "yes"
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            echo "GIT_CLONE_COMMIT_HASH: ${GIT_CLONE_COMMIT_HASH}"
            echo "GIT_CLONE_COMMIT_MESSAGE_SUBJECT: ${GIT_CLONE_COMMIT_MESSAGE_SUBJECT}"
            echo "GIT_CLONE_COMMIT_MESSAGE_BODY: ${GIT_CLONE_COMMIT_MESSAGE_BODY}"
            echo "GIT_CLONE_COMMIT_COUNT: ${GIT_CLONE_COMMIT_COUNT}"
            echo "GIT_CLONE_COMMIT_AUTHOR_NAME: ${GIT_CLONE_COMMIT_AUTHOR_NAME}"
            echo "GIT_CLONE_COMMIT_AUTHOR_EMAIL: ${GIT_CLONE_COMMIT_AUTHOR_EMAIL}"
            echo "GIT_CLONE_COMMIT_COMMITER_NAME: ${GIT_CLONE_COMMIT_COMMITER_NAME}"
            echo "GIT_CLONE_COMMIT_COMMITER_EMAIL: ${GIT_CLONE_COMMIT_COMMITER_EMAIL}"
    - ensure-clean-git:
        inputs:
        - dir_to_check: repo-dir

  ci:
    envs:
    - CLONE_INTO_DIR: .
    - GIT_REPOSITORY_URL: https://github.com/bitrise-io/git-clone-test.git
    steps:
    - activate-ssh-key:
        run_if: true
    - go-list:
    - golint:
    - errcheck:
    - go-test:
    after_run:
    - _test_error
    - _test_submodule
    - _test_no_checkout
    - _test_checkout_commit
    - _test_checkout_commit_with_other_branch
    - _test_checkout_tag
    - _test_checkout_tag_with_other_branch
    - _test_checkout_tag_with_equally_named_branch
    - _test_checkout_branch
    - _test_checkout_pull_request
    - _test_checkout_pull_request_standard_branch
    - _test_checkout_pull_request_with_depth
    - _test_unshallow
    - _test_checkout_different_dir
    - _test_manual_merge_ignore_depth
    - _test_commit_logs
    - _test_hosted_git_notfork
    - _test_unrelated_histories
    - _test_hosted_git_ssh_prefix

  _test_submodule:
    before_run:
    - _create_tmpdir
    steps:
    - path::./:
        run_if: true
        inputs:
        - repository_url: git@gitlab.com:bitrise/git-clone-test.git
        - clone_into_dir: $CLONE_INTO_DIR
        - commit: ""
        - tag: ""
        - branch: "master"
        - pull_request_id: ""
        - pull_request_merge_branch: ""
        - pull_request_repository_url: ""
        - branch_dest: ""
        - clone_depth: ""
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            eval "$EVAL_SCRIPT"
    - ensure-clean-git:
        inputs:
        - dir_to_check: $CLONE_INTO_DIR

  error_test:
    envs:
    - CLONE_INTO_DIR: .
    - GIT_REPOSITORY_URL: https://github.com/bitrise-io/git-clone-test.git
    before_run:
    - _create_tmpdir
    steps:
    - path::./:
        run_if: true
        inputs:
        - clone_into_dir: $CLONE_INTO_DIR
        - commit: ""
        - tag: ""
        - branch: "fake"
        - pull_request_id: ""
        - pull_request_merge_branch: ""
        - pull_request_repository_url: ""
        - branch_dest: ""
        - clone_depth: ""
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            eval "$EVAL_SCRIPT"
    - ensure-clean-git:
        inputs:
        - dir_to_check: $CLONE_INTO_DIR

  _test_error:
    steps:
    - script:
        inputs:
        - content: |-
            #/bin/env bash
            set -x
            bitrise run error_test
            if [ $? == 0 ]; then
              exit 1
            fi

  _test_no_checkout:
    before_run:
    - _create_tmpdir
    steps:
    - path::./:
        run_if: true
        inputs:
        - clone_into_dir: $CLONE_INTO_DIR
        - commit: ""
        - tag: ""
        - branch: ""
        - pull_request_id: ""
        - pull_request_merge_branch: ""
        - pull_request_repository_url: ""
        - branch_dest: ""
        - clone_depth: ""
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            eval "$EVAL_SCRIPT"
    - ensure-clean-git:
        inputs:
        - dir_to_check: $CLONE_INTO_DIR

  _test_checkout_commit:
    before_run:
    - _create_tmpdir
    steps:
    - path::./:
        run_if: true
        inputs:
        - clone_into_dir: $CLONE_INTO_DIR
        - commit: 7a93251a9bf08fb8c6b19fc02f6d94618de6b386
        - tag: ""
        - branch: ""
        - pull_request_id: ""
        - pull_request_merge_branch: ""
        - pull_request_repository_url: ""
        - branch_dest: ""
        - clone_depth: ""
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            eval "$EVAL_SCRIPT"
    - ensure-clean-git:
        inputs:
        - dir_to_check: $CLONE_INTO_DIR

  _test_checkout_commit_with_other_branch:
    before_run:
      - _create_tmpdir
    steps:
      - path::./:
          run_if: true
          inputs:
            - clone_into_dir: $CLONE_INTO_DIR
            - commit: e9667364b397ec5d97b267240928432f74118d72
            - tag: ""
            - branch: "master"
            - pull_request_id: ""
            - pull_request_merge_branch: ""
            - pull_request_repository_url: ""
            - branch_dest: ""
            - clone_depth: ""
      - script:
          inputs:
            - content: |-
                #!/bin/bash
                eval "$EVAL_SCRIPT"
      - ensure-clean-git:
          inputs:
            - dir_to_check: $CLONE_INTO_DIR

  _test_checkout_tag:
    before_run:
    - _create_tmpdir
    steps:
    - path::./:
        run_if: true
        inputs:
        - clone_into_dir: $CLONE_INTO_DIR
        - tag: 0.9.2
        - commit: ""
        - branch: ""
        - pull_request_id: ""
        - pull_request_merge_branch: ""
        - pull_request_repository_url: ""
        - branch_dest: ""
        - clone_depth: ""
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            eval "$EVAL_SCRIPT"
    - ensure-clean-git:
        inputs:
        - dir_to_check: $CLONE_INTO_DIR

  _test_checkout_tag_with_other_branch:
    before_run:
      - _create_tmpdir
    steps:
      - path::./:
          run_if: true
          inputs:
            - clone_into_dir: $CLONE_INTO_DIR
            - tag: 0.9.2
            - commit: ""
            - branch: "carthage"
            - pull_request_id: ""
            - pull_request_merge_branch: ""
            - pull_request_repository_url: ""
            - branch_dest: ""
            - clone_depth: ""
      - script:
          inputs:
            - content: |-
                #!/bin/bash
                eval "$EVAL_SCRIPT"
      - ensure-clean-git:
          inputs:
            - dir_to_check: $CLONE_INTO_DIR

  _test_checkout_tag_with_equally_named_branch:
    before_run:
      - _create_tmpdir
    steps:
      - path::./:
          run_if: true
          inputs:
            - clone_into_dir: $CLONE_INTO_DIR
            - tag: pr_test_new
            - commit: ""
            - branch: "pr_test_new"
            - pull_request_id: ""
            - pull_request_merge_branch: ""
            - pull_request_repository_url: ""
            - branch_dest: ""
            - clone_depth: ""
      - script:
          inputs:
            - content: |-
                #!/bin/bash
                eval "$EVAL_SCRIPT"
      - ensure-clean-git:
          inputs:
            - dir_to_check: $CLONE_INTO_DIR

  _test_checkout_branch:
    before_run:
    - _create_tmpdir
    steps:
    - path::./:
        run_if: true
        inputs:
        - clone_into_dir: $CLONE_INTO_DIR
        - branch: master
        - commit: ""
        - tag: ""
        - pull_request_id: ""
        - pull_request_merge_branch: ""
        - pull_request_repository_url: ""
        - branch_dest: ""
        - clone_depth: ""
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            eval "$EVAL_SCRIPT"
    - ensure-clean-git:
        inputs:
        - dir_to_check: $CLONE_INTO_DIR

  _test_checkout_different_dir:
    before_run:
    - _create_tmpdir
    steps:
    - script:
        inputs:
        - content: envman add --key STEP_TMPDIR_NEW --value $(mktemp -d -t step-git-clone)
    - path::./:
        run_if: true
        inputs:
        - clone_into_dir: $STEP_TMPDIR_NEW
        - branch: master
        - commit: ""
        - tag: ""
        - pull_request_id: ""
        - pull_request_merge_branch: ""
        - pull_request_repository_url: ""
        - branch_dest: ""
        - clone_depth: ""
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            eval "$EVAL_SCRIPT"
    - ensure-clean-git:
        inputs:
        - dir_to_check: $STEP_TMPDIR_NEW

  _test_checkout_pull_request:
    before_run:
    - _create_tmpdir
    steps:
    - path::./:
        run_if: true
        inputs:
        - clone_into_dir: $CLONE_INTO_DIR
        - pull_request_id: 5
        - pull_request_merge_branch: "pull/5/merge"
        - pull_request_repository_url: ""
        - branch_dest: "master"
        - commit: ""
        - tag: ""
        - branch: ""
        - clone_depth: ""
        - manual_merge: "no"
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            eval "$EVAL_SCRIPT"
    - ensure-clean-git:
        inputs:
        - dir_to_check: $CLONE_INTO_DIR
  _test_checkout_pull_request_standard_branch:
    before_run:
      - _create_tmpdir
    steps:
      - path::./:
          run_if: true
          inputs:
            - clone_into_dir: $CLONE_INTO_DIR
            - pull_request_merge_branch: "pr_test"
            - pull_request_repository_url: ""
            - branch_dest: "master"
            - commit: ""
            - tag: ""
            - branch: ""
            - clone_depth: ""
            - manual_merge: "no"
      - script:
          inputs:
            - content: |-
                #!/bin/bash
                eval "$EVAL_SCRIPT"
      - ensure-clean-git:
          inputs:
            - dir_to_check: $CLONE_INTO_DIR

  _test_checkout_pull_request_with_depth:
    before_run:
    - _create_tmpdir
    steps:
    - path::./:
        run_if: true
        inputs:
        - clone_into_dir: $CLONE_INTO_DIR
        - pull_request_id: 5
        - pull_request_merge_branch: "pull/5/merge"
        - pull_request_repository_url: ""
        - branch_dest: "master"
        - commit: ""
        - tag: ""
        - branch: ""
        - clone_depth: 1
        - manual_merge: "no"
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            eval "$EVAL_SCRIPT"
    - ensure-clean-git:
        inputs:
        - dir_to_check: $CLONE_INTO_DIR

  _test_manual_merge_ignore_depth:
    before_run:
    - _create_tmpdir
    steps:
    - path::./:
        run_if: true
        inputs:
        - clone_into_dir: $CLONE_INTO_DIR
        - pull_request_id: 7
        - pull_request_merge_branch: "pull/7/merge"
        - pull_request_repository_url: ""
        - branch_dest: "master"
        - commit: "76a934ae80f12bb9b504bbc86f64a1d310e5db64"
        - tag: ""
        - branch: "test/commit-messages"
        - clone_depth: "1"
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            eval "$EVAL_SCRIPT"
    - ensure-clean-git:
        inputs:
        - dir_to_check: $CLONE_INTO_DIR

  _test_unshallow:
    before_run:
    - _create_tmpdir
    steps:
    - path::./:
        run_if: true
        inputs:
        - clone_into_dir: $CLONE_INTO_DIR
        - commit: cfba2b01332e31cb1568dbf3f22edce063118bae
        - clone_depth: 1
        - tag: ""
        - branch: ""
        - pull_request_id: ""
        - pull_request_merge_branch: ""
        - pull_request_repository_url: ""
        - branch_dest: ""
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            eval "$EVAL_SCRIPT"
    - ensure-clean-git:
        inputs:
        - dir_to_check: $CLONE_INTO_DIR

  _test_commit_logs:
    before_run:
    - _create_tmpdir
    steps:
    - path::./:
        run_if: true
        inputs:
        - clone_into_dir: $CLONE_INTO_DIR
        - commit: "76a934ae80f12bb9b504bbc86f64a1d310e5db64"
        - tag: ""
        - branch: "test/commit-messages"
        - pull_request_id: ""
        - pull_request_merge_branch: ""
        - pull_request_repository_url: ""
        - branch_dest: ""
        - clone_depth: ""
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            check() {
              local env=$1
              local get=${!1}
              local expected=$2
              if [[ "${get}" != "${expected}" ]]; then
                printf "Error: for env var '%s' expected: '%s', get: '%s'\n" "${env}" "${expected}" "${get}"
                exit 1
              fi
            }

            check "GIT_CLONE_COMMIT_HASH" "76a934ae80f12bb9b504bbc86f64a1d310e5db64"
            check "GIT_CLONE_COMMIT_MESSAGE_SUBJECT" "Sample commit message subject"
            check "GIT_CLONE_COMMIT_MESSAGE_BODY" "Sample commit message body"
            check "GIT_CLONE_COMMIT_COUNT" "25"
            check "GIT_CLONE_COMMIT_AUTHOR_NAME" "Krisztian Dobmayer"
            check "GIT_CLONE_COMMIT_AUTHOR_EMAIL" "krisztian.dobmayer@bitrise.io"
            check "GIT_CLONE_COMMIT_COMMITER_NAME" "Krisztian Dobmayer"
            check "GIT_CLONE_COMMIT_COMMITER_EMAIL" "krisztian.dobmayer@bitrise.io"

    - ensure-clean-git:
        inputs:
        - dir_to_check: $CLONE_INTO_DIR

  _test_hosted_git_ssh_prefix:
    before_run:
    - _create_tmpdir
    steps:
    - path::./:
        run_if: true
        inputs:
        - repository_url: "ssh://git@gitlab.com:22/bitrise/git-clone-test.git"
        - clone_into_dir: $CLONE_INTO_DIR
        - pull_request_id:
        - pull_request_merge_branch:
        - pull_request_repository_url: "git@gitlab.com:bitrise/git-clone-test.git"
        - branch_dest: "master"
        - commit: "842b0922232eeb09c1cf5c526f7cdd67ff0e83f7"
        - tag: ""
        - branch: "develop"
        - clone_depth: ""
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            eval "$EVAL_SCRIPT"
    - ensure-clean-git:
        inputs:
        - dir_to_check: $CLONE_INTO_DIR

  _test_hosted_git_notfork:
    before_run:
    - _create_tmpdir
    steps:
    - path::./:
        run_if: true
        inputs:
        - repository_url: "https://github.com/bitrise-io/git-clone-test.git"
        - clone_into_dir: $CLONE_INTO_DIR
        - pull_request_id: 7
        - pull_request_merge_branch: "pull/7/merge"
        - pull_request_repository_url: "git@github.com:bitrise-io/git-clone-test.git"
        - branch_dest: "master"
        - commit: "76a934ae80f12bb9b504bbc86f64a1d310e5db64"
        - tag: ""
        - branch: "test/commit-messages"
        - clone_depth: ""
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            eval "$EVAL_SCRIPT"
    - ensure-clean-git:
        inputs:
        - dir_to_check: $CLONE_INTO_DIR

  _test_unrelated_histories:
    before_run:
    - _create_tmpdir
    steps:
    - path::./:
        run_if: true
        inputs:
        - clone_into_dir: $CLONE_INTO_DIR
        - pull_request_id: 8
        - pull_request_merge_branch: "pull/8/merge"
        - pull_request_repository_url: $GIT_REPOSITORY_URL
        - branch_dest: "unrelated-histories/master"
        - commit: "62af44590c7a2b937726f2c3024a88a129b330b5"
        - tag: ""
        - branch: ""
        - clone_depth: "1"
        - manual_merge: "no"
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            eval "$EVAL_SCRIPT"
    - ensure-clean-git:
        inputs:
        - dir_to_check: $CLONE_INTO_DIR

  _test_too_long_commit_message:
    before_run:
      - _create_tmpdir
    steps:
      - path::./:
          run_if: true
          inputs:
            - clone_into_dir: $CLONE_INTO_DIR
            - commit: "2e8cb1e06cda054e6eb861e56761acd52441cd86"
            - branch: ""
            - tag: ""
            - pull_request_id: ""
            - pull_request_merge_branch: ""
            - pull_request_repository_url: ""
            - branch_dest: ""
            - clone_depth: ""
      - script:
          inputs:
            - content: |-
                #!/bin/bash
                eval "$EVAL_SCRIPT"
                # --- This test only works for default 20kbyte env sizes, if altered, test should be modified accordingly.
                if [ ${#GIT_CLONE_COMMIT_MESSAGE_BODY} -gt "20480" ]; then
                  echo "Message body is bigger than 20480 chars"
                  exit 1
                fi
                if [ ${#GIT_CLONE_COMMIT_MESSAGE_SUBJECT} -gt "20480" ]; then
                  echo "Message subject is bigger than 20480 chars"
                  exit 1
                fi
      - ensure-clean-git:
          inputs:
            - dir_to_check: $CLONE_INTO_DIR

  _create_tmpdir:
    steps:
    - script:
        inputs:
        - content: envman add --key STEP_TMPDIR --value $(mktemp -d -t step-git-clone)
    - change-workdir:
        title: Change directory to a temporary directory
        is_always_run: true
        inputs:
        - path: $STEP_TMPDIR

  # ----------------------------------------------------------------
  # --- Utility workflows
  dep-update:
    title: Dep update
    description: |
      Used for updating bitrise dependencies with dep
    steps:
    - script:
        title: Dependency update
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go get -u -v github.com/golang/dep/cmd/dep
            dep ensure -v
            dep ensure -v -update

  # ----------------------------------------------------------------
  # --- workflow to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml
